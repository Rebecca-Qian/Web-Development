Cookies:
- UA doesn't need any cookies to collect data; can use measurement protocol
- cookies set as soon as user loads page
	_ga cookie:
		4 fields
		- version number eg. GA1
		- #componenets at domain; _ga cookie set on top level domain by default
		- Client ID:
			random unique ID
			first time stamp 
		Client ID
		- GA cookie only exists on device/browser, so client ID only exists on device/browser where set
		- can't identify unique users across diff devices/browsers
		User ID
		- unique random # identifies user across diff browsers/devices
		- generated by authentication system
		- set after tracking obj created
		- set before you send hit data to GA
		Attributes
		- Cookie name: _ga by default
		- domain: where _ga cookie is set up; top level domain by default, must be ancestor of current domain
		- path: path at which cookie is set up; root level / path by default
		- expires: time in seconds, 2 years by default, accepts integers
			0 seconds is browser session based cookie


Trackers:
Website/mobile app is called a property
Every web property has tracking ID format UA-1235-23
Send hit data to GA web property
Use 'create' command to create tracking obj and associate it w web property
Each tracking object can only send data to a single GA property
	Fields - set fields with create command
		- Tracking ID: property ID
			set tracking id using the tracking ID field object
			accepts text values
			makes debugging easier
		- Tracker name:
			t0 default tracker
			set when using non default tracker
			accepts text values
		- Client ID: identifies user
			unique random number created and assigned by cookie _ga
			accepts text values

	Types
		- Default (no name specified)
		- User defined: named trackers

	Multiple trackers
		- create multiple trackers to send to multiple web properties
		- commands become methods of non default properties

	Retrieving data
		get method in ready callback fn
		- Hit callback: after a hit is processed, no arguments
		- Ready callback: retrieve default tracker data
			called after a default tracker created
			default tracker passed as first/only argument
			argument undefined if no default tracker created
		stored on a user defined tracker
		- getByName and getAll
		- can't use get method directly

	Updating default tracker data
		- set command method in ga() command queue function

	Updating named tracker data
		- user defined tracker

	Sending data via default tracker
		- use set command method/send method

GA Commands
	ga() command queue:
		- trackerName: name of tracking obj
		- pluginName: name of an analytics.js plugin
		- *methodName: command/plugin method
			-- command methods --
			create: creates tracking obj
			send: sends hit data to GA
			set: sets field names, vals
			require: sets up analytics.js plugins
			provide: provides analytics.js plugin
			remove: removes tracking obj

			-- plugin methods --
			addImpression: measures product list view data
			addProduct: product list clicks
			SetAction: measures action data
			autoLink: defines domains that need to be automatically cross linked
		- fields: based on command method/plugin method
		- fields-objects: provides values to ga() fn not already supplied via fields param
	ga([GACommand], [fields], [fieldsObject])
		- command queue function because it adds commands to queue to delay execution and doesn't execute immediately, until analytics.js fully loaded

Callbacks in GA
- callback called once method in which it's called completes execution
- if you want to execute a fn once analytics.js fully loaded, pass as ga(function_name);







